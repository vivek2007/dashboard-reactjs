{"ast":null,"code":"var _jsxFileName = \"/Users/pradeepkumar/Downloads/clicks-backend-master/src/components/cleanui/layout/Menu/MenuLeft/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Menu, Layout } from 'antd';\nimport classNames from 'classnames';\nimport store from 'store';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { find } from 'lodash';\nimport style from './style.module.scss';\n\nconst mapStateToProps = ({\n  menu,\n  settings,\n  user\n}) => ({\n  menuData: menu.menuData,\n  isMenuCollapsed: settings.isMenuCollapsed,\n  isMobileView: settings.isMobileView,\n  isMenuUnfixed: settings.isMenuUnfixed,\n  isMenuShadow: settings.isMenuShadow,\n  leftMenuWidth: settings.leftMenuWidth,\n  menuColor: settings.menuColor,\n  logo: settings.logo,\n  role: user.role\n});\n\nconst MenuLeft = ({\n  dispatch,\n  menuData = [],\n  location: {\n    pathname\n  },\n  isMenuCollapsed,\n  isMobileView,\n  isMenuUnfixed,\n  isMenuShadow,\n  leftMenuWidth,\n  menuColor,\n  logo,\n  role\n}) => {\n  const [selectedKeys, setSelectedKeys] = useState(store.get('app.menu.selectedKeys') || []);\n  const [openedKeys, setOpenedKeys] = useState(store.get('app.menu.openedKeys') || []);\n  useEffect(() => {\n    applySelectedKeys(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname, menuData]);\n\n  const applySelectedKeys = () => {\n    const flattenItems = (items, key) => items.reduce((flattenedItems, item) => {\n      flattenedItems.push(item);\n\n      if (Array.isArray(item[key])) {\n        return flattenedItems.concat(flattenItems(item[key], key));\n      }\n\n      return flattenedItems;\n    }, []);\n\n    const selectedItem = find(flattenItems(menuData, 'children'), ['url', pathname]);\n    setSelectedKeys(selectedItem ? [selectedItem.key] : []);\n  };\n\n  const onCollapse = (value, type) => {\n    if (type === 'responsive' && isMenuCollapsed) {\n      return;\n    }\n\n    dispatch({\n      type: 'settings/CHANGE_SETTING',\n      payload: {\n        setting: 'isMenuCollapsed',\n        value: !isMenuCollapsed\n      }\n    });\n    setOpenedKeys([]);\n  };\n\n  const onOpenChange = keys => {\n    store.set('app.menu.openedKeys', keys);\n    setOpenedKeys(keys);\n  };\n\n  const handleClick = e => {\n    store.set('app.menu.selectedKeys', [e.key]);\n    setSelectedKeys([e.key]);\n  };\n\n  const generateMenuItems = () => {\n    const generateItem = item => {\n      const {\n        key,\n        title,\n        url,\n        icon,\n        disabled,\n        count\n      } = item;\n\n      if (item.category) {\n        return /*#__PURE__*/React.createElement(Menu.ItemGroup, {\n          key: Math.random(),\n          title: item.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 16\n          }\n        });\n      }\n\n      if (item.url) {\n        return /*#__PURE__*/React.createElement(Menu.Item, {\n          key: key,\n          disabled: disabled,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }\n        }, item.target && /*#__PURE__*/React.createElement(\"a\", {\n          href: url,\n          target: item.target,\n          rel: \"noopener noreferrer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: style.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }\n        }, title), count && /*#__PURE__*/React.createElement(\"span\", {\n          className: \"badge badge-success ml-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 27\n          }\n        }, count), icon && /*#__PURE__*/React.createElement(\"span\", {\n          className: `${icon} ${style.icon} icon-collapsed-hidden`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 26\n          }\n        })), !item.target && /*#__PURE__*/React.createElement(Link, {\n          to: url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: style.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }\n        }, title), count && /*#__PURE__*/React.createElement(\"span\", {\n          className: \"badge badge-success ml-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 27\n          }\n        }, count), icon && /*#__PURE__*/React.createElement(\"span\", {\n          className: `${icon} ${style.icon} icon-collapsed-hidden`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 26\n          }\n        })));\n      }\n\n      return /*#__PURE__*/React.createElement(Menu.Item, {\n        key: key,\n        disabled: disabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: style.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, title), count && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"badge badge-success ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }, count), icon && /*#__PURE__*/React.createElement(\"span\", {\n        className: `${icon} ${style.icon} icon-collapsed-hidden`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 20\n        }\n      }));\n    };\n\n    const generateSubmenu = items => items.map(menuItem => {\n      if (menuItem.children) {\n        const subMenuTitle = /*#__PURE__*/React.createElement(\"span\", {\n          key: menuItem.key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: style.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }\n        }, menuItem.title), menuItem.count && /*#__PURE__*/React.createElement(\"span\", {\n          className: \"badge badge-success ml-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 34\n          }\n        }, menuItem.count), menuItem.icon && /*#__PURE__*/React.createElement(\"span\", {\n          className: `${menuItem.icon} ${style.icon}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }\n        }));\n        return /*#__PURE__*/React.createElement(Menu.SubMenu, {\n          title: subMenuTitle,\n          key: menuItem.key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }\n        }, generateSubmenu(menuItem.children));\n      }\n\n      return generateItem(menuItem);\n    });\n\n    return menuData.map(menuItem => {\n      if (menuItem.roles && !menuItem.roles.includes(role)) {\n        return null;\n      }\n\n      if (menuItem.children) {\n        const subMenuTitle = /*#__PURE__*/React.createElement(\"span\", {\n          key: menuItem.key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: style.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }\n        }, menuItem.title), menuItem.count && /*#__PURE__*/React.createElement(\"span\", {\n          className: \"badge badge-success ml-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 32\n          }\n        }, menuItem.count), menuItem.icon && /*#__PURE__*/React.createElement(\"span\", {\n          className: `${menuItem.icon} ${style.icon}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 31\n          }\n        }));\n        return /*#__PURE__*/React.createElement(Menu.SubMenu, {\n          title: subMenuTitle,\n          key: menuItem.key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }\n        }, generateSubmenu(menuItem.children));\n      }\n\n      return generateItem(menuItem);\n    });\n  };\n\n  const menuSettings = isMobileView ? {\n    width: leftMenuWidth,\n    collapsible: false,\n    collapsed: false,\n    onCollapse\n  } : {\n    width: leftMenuWidth,\n    collapsible: true,\n    collapsed: isMenuCollapsed,\n    onCollapse,\n    breakpoint: 'lg'\n  };\n  return /*#__PURE__*/React.createElement(Layout.Sider, Object.assign({}, menuSettings, {\n    className: classNames(`${style.menu}`, {\n      [style.white]: menuColor === 'white',\n      [style.gray]: menuColor === 'gray',\n      [style.dark]: menuColor === 'dark',\n      [style.unfixed]: isMenuUnfixed,\n      [style.shadow]: isMenuShadow\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.menuOuter,\n    style: {\n      width: isMenuCollapsed && !isMobileView ? 80 : leftMenuWidth,\n      height: isMobileView || isMenuUnfixed ? 'calc(100% - 64px)' : 'calc(100% - 110px)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.logoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"resources/images/logo.svg\",\n    className: \"mr-2\",\n    alt: \"Clean UI\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, logo), logo === 'Clicks' && /*#__PURE__*/React.createElement(\"div\", {\n    className: style.descr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 35\n    }\n  }, \"React\"))), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    onClick: handleClick,\n    selectedKeys: selectedKeys,\n    openKeys: openedKeys,\n    onOpenChange: onOpenChange,\n    mode: \"inline\",\n    className: style.navigation,\n    inlineIndent: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, generateMenuItems()))));\n};\n\nexport default withRouter(connect(mapStateToProps)(MenuLeft));","map":{"version":3,"sources":["/Users/pradeepkumar/Downloads/clicks-backend-master/src/components/cleanui/layout/Menu/MenuLeft/index.js"],"names":["React","useState","useEffect","connect","Link","withRouter","Menu","Layout","classNames","store","PerfectScrollbar","find","style","mapStateToProps","menu","settings","user","menuData","isMenuCollapsed","isMobileView","isMenuUnfixed","isMenuShadow","leftMenuWidth","menuColor","logo","role","MenuLeft","dispatch","location","pathname","selectedKeys","setSelectedKeys","get","openedKeys","setOpenedKeys","applySelectedKeys","flattenItems","items","key","reduce","flattenedItems","item","push","Array","isArray","concat","selectedItem","onCollapse","value","type","payload","setting","onOpenChange","keys","set","handleClick","e","generateMenuItems","generateItem","title","url","icon","disabled","count","category","Math","random","target","generateSubmenu","map","menuItem","children","subMenuTitle","roles","includes","menuSettings","width","collapsible","collapsed","breakpoint","white","gray","dark","unfixed","shadow","menuOuter","height","logoContainer","name","descr","navigation"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport { Menu, Layout } from 'antd'\nimport classNames from 'classnames'\nimport store from 'store'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { find } from 'lodash'\nimport style from './style.module.scss'\n\nconst mapStateToProps = ({ menu, settings, user }) => ({\n  menuData: menu.menuData,\n  isMenuCollapsed: settings.isMenuCollapsed,\n  isMobileView: settings.isMobileView,\n  isMenuUnfixed: settings.isMenuUnfixed,\n  isMenuShadow: settings.isMenuShadow,\n  leftMenuWidth: settings.leftMenuWidth,\n  menuColor: settings.menuColor,\n  logo: settings.logo,\n  role: user.role,\n})\n\nconst MenuLeft = ({\n  dispatch,\n  menuData = [],\n  location: { pathname },\n\n  isMenuCollapsed,\n  isMobileView,\n  isMenuUnfixed,\n  isMenuShadow,\n  leftMenuWidth,\n  menuColor,\n  logo,\n  role,\n}) => {\n  const [selectedKeys, setSelectedKeys] = useState(store.get('app.menu.selectedKeys') || [])\n  const [openedKeys, setOpenedKeys] = useState(store.get('app.menu.openedKeys') || [])\n\n  useEffect(() => {\n    applySelectedKeys()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname, menuData])\n\n  const applySelectedKeys = () => {\n    const flattenItems = (items, key) =>\n      items.reduce((flattenedItems, item) => {\n        flattenedItems.push(item)\n        if (Array.isArray(item[key])) {\n          return flattenedItems.concat(flattenItems(item[key], key))\n        }\n        return flattenedItems\n      }, [])\n    const selectedItem = find(flattenItems(menuData, 'children'), ['url', pathname])\n    setSelectedKeys(selectedItem ? [selectedItem.key] : [])\n  }\n\n  const onCollapse = (value, type) => {\n    if (type === 'responsive' && isMenuCollapsed) {\n      return\n    }\n    dispatch({\n      type: 'settings/CHANGE_SETTING',\n      payload: {\n        setting: 'isMenuCollapsed',\n        value: !isMenuCollapsed,\n      },\n    })\n    setOpenedKeys([])\n  }\n\n  const onOpenChange = keys => {\n    store.set('app.menu.openedKeys', keys)\n    setOpenedKeys(keys)\n  }\n\n  const handleClick = e => {\n    store.set('app.menu.selectedKeys', [e.key])\n    setSelectedKeys([e.key])\n  }\n\n  const generateMenuItems = () => {\n    const generateItem = item => {\n      const { key, title, url, icon, disabled, count } = item\n      if (item.category) {\n        return <Menu.ItemGroup key={Math.random()} title={item.title} />\n      }\n      if (item.url) {\n        return (\n          <Menu.Item key={key} disabled={disabled}>\n            {item.target && (\n              <a href={url} target={item.target} rel=\"noopener noreferrer\">\n                <span className={style.title}>{title}</span>\n                {count && <span className=\"badge badge-success ml-2\">{count}</span>}\n                {icon && <span className={`${icon} ${style.icon} icon-collapsed-hidden`} />}\n              </a>\n            )}\n            {!item.target && (\n              <Link to={url}>\n                <span className={style.title}>{title}</span>\n                {count && <span className=\"badge badge-success ml-2\">{count}</span>}\n                {icon && <span className={`${icon} ${style.icon} icon-collapsed-hidden`} />}\n              </Link>\n            )}\n          </Menu.Item>\n        )\n      }\n      return (\n        <Menu.Item key={key} disabled={disabled}>\n          <span className={style.title}>{title}</span>\n          {count && <span className=\"badge badge-success ml-2\">{count}</span>}\n          {icon && <span className={`${icon} ${style.icon} icon-collapsed-hidden`} />}\n        </Menu.Item>\n      )\n    }\n\n    const generateSubmenu = items =>\n      items.map(menuItem => {\n        if (menuItem.children) {\n          const subMenuTitle = (\n            <span key={menuItem.key}>\n              <span className={style.title}>{menuItem.title}</span>\n              {menuItem.count && <span className=\"badge badge-success ml-2\">{menuItem.count}</span>}\n              {menuItem.icon && <span className={`${menuItem.icon} ${style.icon}`} />}\n            </span>\n          )\n          return (\n            <Menu.SubMenu title={subMenuTitle} key={menuItem.key}>\n              {generateSubmenu(menuItem.children)}\n            </Menu.SubMenu>\n          )\n        }\n        return generateItem(menuItem)\n      })\n\n    return menuData.map(menuItem => {\n      if (menuItem.roles && !menuItem.roles.includes(role)) {\n        return null\n      }\n      if (menuItem.children) {\n        const subMenuTitle = (\n          <span key={menuItem.key}>\n            <span className={style.title}>{menuItem.title}</span>\n            {menuItem.count && <span className=\"badge badge-success ml-2\">{menuItem.count}</span>}\n            {menuItem.icon && <span className={`${menuItem.icon} ${style.icon}`} />}\n          </span>\n        )\n        return (\n          <Menu.SubMenu title={subMenuTitle} key={menuItem.key}>\n            {generateSubmenu(menuItem.children)}\n          </Menu.SubMenu>\n        )\n      }\n      return generateItem(menuItem)\n    })\n  }\n\n  const menuSettings = isMobileView\n    ? {\n        width: leftMenuWidth,\n        collapsible: false,\n        collapsed: false,\n        onCollapse,\n      }\n    : {\n        width: leftMenuWidth,\n        collapsible: true,\n        collapsed: isMenuCollapsed,\n        onCollapse,\n        breakpoint: 'lg',\n      }\n\n  return (\n    <Layout.Sider\n      {...menuSettings}\n      className={classNames(`${style.menu}`, {\n        [style.white]: menuColor === 'white',\n        [style.gray]: menuColor === 'gray',\n        [style.dark]: menuColor === 'dark',\n        [style.unfixed]: isMenuUnfixed,\n        [style.shadow]: isMenuShadow,\n      })}\n    >\n      <div\n        className={style.menuOuter}\n        style={{\n          width: isMenuCollapsed && !isMobileView ? 80 : leftMenuWidth,\n          height: isMobileView || isMenuUnfixed ? 'calc(100% - 64px)' : 'calc(100% - 110px)',\n        }}\n      >\n        <div className={style.logoContainer}>\n          <div className={style.logo}>\n            <img src=\"resources/images/logo.svg\" className=\"mr-2\" alt=\"Clean UI\" />\n            <div className={style.name}>{logo}</div>\n            {logo === 'Clicks' && <div className={style.descr}>React</div>}\n          </div>\n        </div>\n        <PerfectScrollbar>\n          <Menu\n            onClick={handleClick}\n            selectedKeys={selectedKeys}\n            openKeys={openedKeys}\n            onOpenChange={onOpenChange}\n            mode=\"inline\"\n            className={style.navigation}\n            inlineIndent=\"15\"\n          >\n            {generateMenuItems()}\n          </Menu>\n         \n        </PerfectScrollbar>\n      </div>\n    </Layout.Sider>\n  )\n}\n\nexport default withRouter(connect(mapStateToProps)(MenuLeft))\n"]},"metadata":{},"sourceType":"module"}