{"ast":null,"code":"var _jsxFileName = \"/Users/pradeepkumar/Downloads/clicks-backend-master/src/index.js\";\nimport 'antd/lib/style/index.less'; // antd core styles\n\nimport './components/kit/vendors/antd/themes/default.less'; // default theme antd components\n\nimport './components/kit/vendors/antd/themes/dark.less'; // dark theme antd components\n\nimport './global.scss'; // app & third-party component styles\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createHashHistory } from 'history';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux'; // import { logger } from 'redux-logger'\n\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\nimport reducers from './redux/reducers';\nimport sagas from './redux/sagas';\nimport Localization from './localization';\nimport Router from './router';\nimport * as serviceWorker from './serviceWorker'; // middlewared\n\nconst history = createHashHistory();\nconst sagaMiddleware = createSagaMiddleware();\nconst routeMiddleware = routerMiddleware(history);\nconst middlewares = [sagaMiddleware, routeMiddleware]; // if (process.env.NODE_ENV === 'development') {\n//   middlewares.push(logger)\n// }\n\nconst store = createStore(reducers(history), compose(applyMiddleware(...middlewares)));\nsagaMiddleware.run(sagas);\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Localization, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Router, {\n  history: history,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\nexport { store, history };","map":{"version":3,"sources":["/Users/pradeepkumar/Downloads/clicks-backend-master/src/index.js"],"names":["React","ReactDOM","createHashHistory","createStore","applyMiddleware","compose","Provider","createSagaMiddleware","routerMiddleware","reducers","sagas","Localization","Router","serviceWorker","history","sagaMiddleware","routeMiddleware","middlewares","store","run","render","document","getElementById","unregister"],"mappings":";AAAA,OAAO,2BAAP,C,CAAmC;;AACnC,OAAO,mDAAP,C,CAA2D;;AAC3D,OAAO,gDAAP,C,CAAwD;;AACxD,OAAO,eAAP,C,CAAuB;;AAEvB,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,iBAAT,QAAkC,SAAlC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CAEA;;AACA,MAAMC,OAAO,GAAGZ,iBAAiB,EAAjC;AACA,MAAMa,cAAc,GAAGR,oBAAoB,EAA3C;AACA,MAAMS,eAAe,GAAGR,gBAAgB,CAACM,OAAD,CAAxC;AACA,MAAMG,WAAW,GAAG,CAACF,cAAD,EAAiBC,eAAjB,CAApB,C,CACA;AACA;AACA;;AACA,MAAME,KAAK,GAAGf,WAAW,CAACM,QAAQ,CAACK,OAAD,CAAT,EAAoBT,OAAO,CAACD,eAAe,CAAC,GAAGa,WAAJ,CAAhB,CAA3B,CAAzB;AACAF,cAAc,CAACI,GAAf,CAAmBT,KAAnB;AAEAT,QAAQ,CAACmB,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAEJ,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAT,aAAa,CAACU,UAAd;AACA,SAASL,KAAT,EAAgBJ,OAAhB","sourcesContent":["import 'antd/lib/style/index.less' // antd core styles\nimport './components/kit/vendors/antd/themes/default.less' // default theme antd components\nimport './components/kit/vendors/antd/themes/dark.less' // dark theme antd components\nimport './global.scss' // app & third-party component styles\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createHashHistory } from 'history'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\n// import { logger } from 'redux-logger'\nimport createSagaMiddleware from 'redux-saga'\nimport { routerMiddleware } from 'connected-react-router'\n\nimport reducers from './redux/reducers'\nimport sagas from './redux/sagas'\nimport Localization from './localization'\nimport Router from './router'\nimport * as serviceWorker from './serviceWorker'\n\n// middlewared\nconst history = createHashHistory()\nconst sagaMiddleware = createSagaMiddleware()\nconst routeMiddleware = routerMiddleware(history)\nconst middlewares = [sagaMiddleware, routeMiddleware]\n// if (process.env.NODE_ENV === 'development') {\n//   middlewares.push(logger)\n// }\nconst store = createStore(reducers(history), compose(applyMiddleware(...middlewares)))\nsagaMiddleware.run(sagas)\n\nReactDOM.render(\n  <Provider store={store}>\n    <Localization>\n      <Router history={history} />\n    </Localization>\n  </Provider>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\nexport { store, history }\n"]},"metadata":{},"sourceType":"module"}