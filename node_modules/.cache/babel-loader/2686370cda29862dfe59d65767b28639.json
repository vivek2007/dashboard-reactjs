{"ast":null,"code":"var _jsxFileName = \"/Users/pradeepkumar/Downloads/clicks-backend-master/src/components/cleanui/layout/Menu/MenuTop/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Menu } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport store from 'store';\nimport { find } from 'lodash';\nimport style from './style.module.scss';\n\nconst mapStateToProps = ({\n  menu,\n  settings,\n  user\n}) => ({\n  menuData: menu.menuData,\n  logo: settings.logo,\n  menuColor: settings.menuColor,\n  role: user.role\n});\n\nconst MenuTop = ({\n  menuData = [],\n  location: {\n    pathname\n  },\n  menuColor,\n  logo,\n  role\n}) => {\n  const [selectedKeys, setSelectedKeys] = useState(store.get('app.menu.selectedKeys') || []);\n  useEffect(() => {\n    applySelectedKeys(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname, menuData]);\n\n  const applySelectedKeys = () => {\n    const flattenItems = (items, key) => items.reduce((flattenedItems, item) => {\n      flattenedItems.push(item);\n\n      if (Array.isArray(item[key])) {\n        return flattenedItems.concat(flattenItems(item[key], key));\n      }\n\n      return flattenedItems;\n    }, []);\n\n    const selectedItem = find(flattenItems(menuData, 'children'), ['url', pathname]);\n    setSelectedKeys(selectedItem ? [selectedItem.key] : []);\n  };\n\n  const handleClick = e => {\n    store.set('app.menu.selectedKeys', [e.key]);\n    setSelectedKeys([e.key]);\n  };\n\n  const generateMenuItems = () => {\n    const generateItem = item => {\n      const {\n        key,\n        title,\n        url,\n        icon,\n        disabled,\n        count\n      } = item;\n\n      if (item.category) {\n        return null;\n      }\n\n      if (item.url) {\n        return /*#__PURE__*/React.createElement(Menu.Item, {\n          key: key,\n          disabled: disabled,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }\n        }, item.target && /*#__PURE__*/React.createElement(\"a\", {\n          href: url,\n          target: item.target,\n          rel: \"noopener noreferrer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }\n        }, icon && /*#__PURE__*/React.createElement(\"span\", {\n          className: `${icon} ${style.icon}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 26\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: style.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }\n        }, title), count && /*#__PURE__*/React.createElement(\"span\", {\n          className: \"badge badge-success ml-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 27\n          }\n        }, count)), !item.target && /*#__PURE__*/React.createElement(Link, {\n          to: url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }\n        }, icon && /*#__PURE__*/React.createElement(\"span\", {\n          className: `${icon} ${style.icon}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 26\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: style.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }\n        }, title), count && /*#__PURE__*/React.createElement(\"span\", {\n          className: \"badge badge-success ml-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 27\n          }\n        }, count)));\n      }\n\n      return /*#__PURE__*/React.createElement(Menu.Item, {\n        key: key,\n        disabled: disabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, icon && /*#__PURE__*/React.createElement(\"span\", {\n        className: `${icon} ${style.icon}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 20\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: style.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, title), count && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"badge badge-success ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, count));\n    };\n\n    const generateSubmenu = items => items.map(menuItem => {\n      if (menuItem.children) {\n        const subMenuTitle = /*#__PURE__*/React.createElement(\"span\", {\n          key: menuItem.key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }\n        }, menuItem.icon && /*#__PURE__*/React.createElement(\"span\", {\n          className: `${menuItem.icon} ${style.icon}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: style.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }\n        }, menuItem.title), menuItem.count && /*#__PURE__*/React.createElement(\"span\", {\n          className: \"badge badge-success ml-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 34\n          }\n        }, menuItem.count));\n        return /*#__PURE__*/React.createElement(Menu.SubMenu, {\n          title: subMenuTitle,\n          key: menuItem.key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }\n        }, generateSubmenu(menuItem.children));\n      }\n\n      return generateItem(menuItem);\n    });\n\n    return menuData.map(menuItem => {\n      if (menuItem.roles && !menuItem.roles.includes(role)) {\n        return null;\n      }\n\n      if (menuItem.children) {\n        const subMenuTitle = /*#__PURE__*/React.createElement(\"span\", {\n          key: menuItem.key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }\n        }, menuItem.icon && /*#__PURE__*/React.createElement(\"span\", {\n          className: `${menuItem.icon} ${style.icon}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 31\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: style.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }\n        }, menuItem.title), menuItem.count && /*#__PURE__*/React.createElement(\"span\", {\n          className: \"badge badge-success ml-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 32\n          }\n        }, menuItem.count));\n        return /*#__PURE__*/React.createElement(Menu.SubMenu, {\n          title: subMenuTitle,\n          key: menuItem.key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }\n        }, generateSubmenu(menuItem.children));\n      }\n\n      return generateItem(menuItem);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${style.menu}`, {\n      [style.white]: menuColor === 'white',\n      [style.gray]: menuColor === 'gray',\n      [style.dark]: menuColor === 'dark'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.logoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"resources/images/logo.svg\",\n    className: \"mr-2\",\n    alt: \"Clean UI\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, logo), logo === 'Clicks' && /*#__PURE__*/React.createElement(\"div\", {\n    className: style.descr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, \"React\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    onClick: handleClick,\n    selectedKeys: selectedKeys,\n    mode: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, generateMenuItems())));\n};\n\nexport default withRouter(connect(mapStateToProps)(MenuTop));","map":{"version":3,"sources":["/Users/pradeepkumar/Downloads/clicks-backend-master/src/components/cleanui/layout/Menu/MenuTop/index.js"],"names":["React","useState","useEffect","connect","Menu","Link","withRouter","classNames","store","find","style","mapStateToProps","menu","settings","user","menuData","logo","menuColor","role","MenuTop","location","pathname","selectedKeys","setSelectedKeys","get","applySelectedKeys","flattenItems","items","key","reduce","flattenedItems","item","push","Array","isArray","concat","selectedItem","handleClick","e","set","generateMenuItems","generateItem","title","url","icon","disabled","count","category","target","generateSubmenu","map","menuItem","children","subMenuTitle","roles","includes","white","gray","dark","logoContainer","name","descr","navigation"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Menu } from 'antd'\nimport { Link, withRouter } from 'react-router-dom'\nimport classNames from 'classnames'\nimport store from 'store'\nimport { find } from 'lodash'\nimport style from './style.module.scss'\n\nconst mapStateToProps = ({ menu, settings, user }) => ({\n  menuData: menu.menuData,\n  logo: settings.logo,\n  menuColor: settings.menuColor,\n  role: user.role,\n})\n\nconst MenuTop = ({\n  menuData = [],\n  location: { pathname },\n\n  menuColor,\n  logo,\n  role,\n}) => {\n  const [selectedKeys, setSelectedKeys] = useState(store.get('app.menu.selectedKeys') || [])\n\n  useEffect(() => {\n    applySelectedKeys()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname, menuData])\n\n  const applySelectedKeys = () => {\n    const flattenItems = (items, key) =>\n      items.reduce((flattenedItems, item) => {\n        flattenedItems.push(item)\n        if (Array.isArray(item[key])) {\n          return flattenedItems.concat(flattenItems(item[key], key))\n        }\n        return flattenedItems\n      }, [])\n    const selectedItem = find(flattenItems(menuData, 'children'), ['url', pathname])\n    setSelectedKeys(selectedItem ? [selectedItem.key] : [])\n  }\n\n  const handleClick = e => {\n    store.set('app.menu.selectedKeys', [e.key])\n    setSelectedKeys([e.key])\n  }\n\n  const generateMenuItems = () => {\n    const generateItem = item => {\n      const { key, title, url, icon, disabled, count } = item\n      if (item.category) {\n        return null\n      }\n      if (item.url) {\n        return (\n          <Menu.Item key={key} disabled={disabled}>\n            {item.target && (\n              <a href={url} target={item.target} rel=\"noopener noreferrer\">\n                {icon && <span className={`${icon} ${style.icon}`} />}\n                <span className={style.title}>{title}</span>\n                {count && <span className=\"badge badge-success ml-2\">{count}</span>}\n              </a>\n            )}\n            {!item.target && (\n              <Link to={url}>\n                {icon && <span className={`${icon} ${style.icon}`} />}\n                <span className={style.title}>{title}</span>\n                {count && <span className=\"badge badge-success ml-2\">{count}</span>}\n              </Link>\n            )}\n          </Menu.Item>\n        )\n      }\n      return (\n        <Menu.Item key={key} disabled={disabled}>\n          {icon && <span className={`${icon} ${style.icon}`} />}\n          <span className={style.title}>{title}</span>\n          {count && <span className=\"badge badge-success ml-2\">{count}</span>}\n        </Menu.Item>\n      )\n    }\n    const generateSubmenu = items =>\n      items.map(menuItem => {\n        if (menuItem.children) {\n          const subMenuTitle = (\n            <span key={menuItem.key}>\n              {menuItem.icon && <span className={`${menuItem.icon} ${style.icon}`} />}\n              <span className={style.title}>{menuItem.title}</span>\n              {menuItem.count && <span className=\"badge badge-success ml-2\">{menuItem.count}</span>}\n            </span>\n          )\n          return (\n            <Menu.SubMenu title={subMenuTitle} key={menuItem.key}>\n              {generateSubmenu(menuItem.children)}\n            </Menu.SubMenu>\n          )\n        }\n        return generateItem(menuItem)\n      })\n    return menuData.map(menuItem => {\n      if (menuItem.roles && !menuItem.roles.includes(role)) {\n        return null\n      }\n      if (menuItem.children) {\n        const subMenuTitle = (\n          <span key={menuItem.key}>\n            {menuItem.icon && <span className={`${menuItem.icon} ${style.icon}`} />}\n            <span className={style.title}>{menuItem.title}</span>\n            {menuItem.count && <span className=\"badge badge-success ml-2\">{menuItem.count}</span>}\n          </span>\n        )\n        return (\n          <Menu.SubMenu title={subMenuTitle} key={menuItem.key}>\n            {generateSubmenu(menuItem.children)}\n          </Menu.SubMenu>\n        )\n      }\n      return generateItem(menuItem)\n    })\n  }\n\n  return (\n    <div\n      className={classNames(`${style.menu}`, {\n        [style.white]: menuColor === 'white',\n        [style.gray]: menuColor === 'gray',\n        [style.dark]: menuColor === 'dark',\n      })}\n    >\n      <div className={style.logoContainer}>\n        <div className={style.logo}>\n          <img src=\"resources/images/logo.svg\" className=\"mr-2\" alt=\"Clean UI\" />\n          <div className={style.name}>{logo}</div>\n          {logo === 'Clicks' && <div className={style.descr}>React</div>}\n        </div>\n      </div>\n      <div className={style.navigation}>\n        <Menu onClick={handleClick} selectedKeys={selectedKeys} mode=\"horizontal\">\n          {generateMenuItems()}\n        </Menu>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(connect(mapStateToProps)(MenuTop))\n"]},"metadata":{},"sourceType":"module"}