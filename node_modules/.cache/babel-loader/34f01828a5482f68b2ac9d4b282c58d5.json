{"ast":null,"code":"import store from 'store';\nimport actions from './actions';\n\nconst STORED_SETTINGS = storedSettings => {\n  const settings = {};\n  Object.keys(storedSettings).forEach(key => {\n    const item = store.get(`app.settings.${key}`);\n    settings[key] = typeof item !== 'undefined' ? item : storedSettings[key];\n  });\n  return settings;\n};\n\nconst initialState = { ...STORED_SETTINGS({\n    authProvider: 'firebase',\n    // firebase, jwt\n    logo: 'Clicks',\n    locale: 'en-US',\n    isSidebarOpen: false,\n    isSupportChatOpen: false,\n    isMobileView: false,\n    isMobileMenuOpen: false,\n    isMenuCollapsed: false,\n    menuLayoutType: 'left',\n    // left, top, nomenu\n    routerAnimation: 'slide-fadein-up',\n    // none, slide-fadein-up, slide-fadein-right, fadein, zoom-fadein\n    menuColor: 'white',\n    // white, dark, gray\n    theme: 'default',\n    // default, dark\n    authPagesColor: 'white',\n    // white, gray, image\n    primaryColor: '#4b7cf3',\n    leftMenuWidth: 256,\n    isMenuUnfixed: false,\n    isMenuShadow: false,\n    isTopbarFixed: false,\n    isGrayTopbar: false,\n    isContentMaxWidth: false,\n    isAppMaxWidth: false,\n    isGrayBackground: false,\n    isCardShadow: true,\n    isSquaredBorders: false,\n    isBorderless: false\n  })\n};\nexport default function settingsReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_STATE:\n      return { ...state,\n        ...action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/pradeepkumar/Downloads/clicks-backend-master/src/redux/settings/reducers.js"],"names":["store","actions","STORED_SETTINGS","storedSettings","settings","Object","keys","forEach","key","item","get","initialState","authProvider","logo","locale","isSidebarOpen","isSupportChatOpen","isMobileView","isMobileMenuOpen","isMenuCollapsed","menuLayoutType","routerAnimation","menuColor","theme","authPagesColor","primaryColor","leftMenuWidth","isMenuUnfixed","isMenuShadow","isTopbarFixed","isGrayTopbar","isContentMaxWidth","isAppMaxWidth","isGrayBackground","isCardShadow","isSquaredBorders","isBorderless","settingsReducer","state","action","type","SET_STATE","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,eAAe,GAAGC,cAAc,IAAI;AACxC,QAAMC,QAAQ,GAAG,EAAjB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,cAAZ,EAA4BI,OAA5B,CAAoCC,GAAG,IAAI;AACzC,UAAMC,IAAI,GAAGT,KAAK,CAACU,GAAN,CAAW,gBAAeF,GAAI,EAA9B,CAAb;AACAJ,IAAAA,QAAQ,CAACI,GAAD,CAAR,GAAgB,OAAOC,IAAP,KAAgB,WAAhB,GAA8BA,IAA9B,GAAqCN,cAAc,CAACK,GAAD,CAAnE;AACD,GAHD;AAIA,SAAOJ,QAAP;AACD,CAPD;;AASA,MAAMO,YAAY,GAAG,EACnB,GAAGT,eAAe,CAAC;AACjBU,IAAAA,YAAY,EAAE,UADG;AACS;AAC1BC,IAAAA,IAAI,EAAE,QAFW;AAGjBC,IAAAA,MAAM,EAAE,OAHS;AAIjBC,IAAAA,aAAa,EAAE,KAJE;AAKjBC,IAAAA,iBAAiB,EAAE,KALF;AAMjBC,IAAAA,YAAY,EAAE,KANG;AAOjBC,IAAAA,gBAAgB,EAAE,KAPD;AAQjBC,IAAAA,eAAe,EAAE,KARA;AASjBC,IAAAA,cAAc,EAAE,MATC;AASO;AACxBC,IAAAA,eAAe,EAAE,iBAVA;AAUmB;AACpCC,IAAAA,SAAS,EAAE,OAXM;AAWG;AACpBC,IAAAA,KAAK,EAAE,SAZU;AAYC;AAClBC,IAAAA,cAAc,EAAE,OAbC;AAaQ;AACzBC,IAAAA,YAAY,EAAE,SAdG;AAejBC,IAAAA,aAAa,EAAE,GAfE;AAgBjBC,IAAAA,aAAa,EAAE,KAhBE;AAiBjBC,IAAAA,YAAY,EAAE,KAjBG;AAkBjBC,IAAAA,aAAa,EAAE,KAlBE;AAmBjBC,IAAAA,YAAY,EAAE,KAnBG;AAoBjBC,IAAAA,iBAAiB,EAAE,KApBF;AAqBjBC,IAAAA,aAAa,EAAE,KArBE;AAsBjBC,IAAAA,gBAAgB,EAAE,KAtBD;AAuBjBC,IAAAA,YAAY,EAAE,IAvBG;AAwBjBC,IAAAA,gBAAgB,EAAE,KAxBD;AAyBjBC,IAAAA,YAAY,EAAE;AAzBG,GAAD;AADC,CAArB;AA8BA,eAAe,SAASC,eAAT,CAAyBC,KAAK,GAAG3B,YAAjC,EAA+C4B,MAA/C,EAAuD;AACpE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKvC,OAAO,CAACwC,SAAb;AACE,aAAO,EAAE,GAAGH,KAAL;AAAY,WAAGC,MAAM,CAACG;AAAtB,OAAP;;AACF;AACE,aAAOJ,KAAP;AAJJ;AAMD","sourcesContent":["import store from 'store'\nimport actions from './actions'\n\nconst STORED_SETTINGS = storedSettings => {\n  const settings = {}\n  Object.keys(storedSettings).forEach(key => {\n    const item = store.get(`app.settings.${key}`)\n    settings[key] = typeof item !== 'undefined' ? item : storedSettings[key]\n  })\n  return settings\n}\n\nconst initialState = {\n  ...STORED_SETTINGS({\n    authProvider: 'firebase', // firebase, jwt\n    logo: 'Clicks',\n    locale: 'en-US',\n    isSidebarOpen: false,\n    isSupportChatOpen: false,\n    isMobileView: false,\n    isMobileMenuOpen: false,\n    isMenuCollapsed: false,\n    menuLayoutType: 'left', // left, top, nomenu\n    routerAnimation: 'slide-fadein-up', // none, slide-fadein-up, slide-fadein-right, fadein, zoom-fadein\n    menuColor: 'white', // white, dark, gray\n    theme: 'default', // default, dark\n    authPagesColor: 'white', // white, gray, image\n    primaryColor: '#4b7cf3',\n    leftMenuWidth: 256,\n    isMenuUnfixed: false,\n    isMenuShadow: false,\n    isTopbarFixed: false,\n    isGrayTopbar: false,\n    isContentMaxWidth: false,\n    isAppMaxWidth: false,\n    isGrayBackground: false,\n    isCardShadow: true,\n    isSquaredBorders: false,\n    isBorderless: false,\n  }),\n}\n\nexport default function settingsReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_STATE:\n      return { ...state, ...action.payload }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}