{"ast":null,"code":"var _jsxFileName = \"/Users/pradeepkumar/Downloads/clicks-backend-master/src/layouts/index.js\";\nimport React, { Fragment } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport NProgress from 'nprogress';\nimport { Helmet } from 'react-helmet'; // import Loader from 'components/cleanui/layout/Loader'\n\nimport PublicLayout from './Public';\nimport AuthLayout from './Auth';\nimport MainLayout from './Main';\nconst Layouts = {\n  public: PublicLayout,\n  auth: AuthLayout,\n  main: MainLayout\n};\n\nconst mapStateToProps = ({\n  user\n}) => ({\n  user\n});\n\nlet previousPath = '';\n\nconst Layout = ({\n  user,\n  children,\n  location: {\n    pathname,\n    search\n  }\n}) => {\n  // NProgress & ScrollTop Management\n  const currentPath = pathname + search;\n\n  if (currentPath !== previousPath) {\n    window.scrollTo(0, 0);\n    NProgress.start();\n  }\n\n  setTimeout(() => {\n    NProgress.done();\n    previousPath = currentPath;\n  }, 300); // Layout Rendering\n\n  const getLayout = () => {\n    if (pathname === '/') {\n      return 'public';\n    }\n\n    if (/^\\/auth(?=\\/|$)/i.test(pathname)) {\n      return 'auth';\n    }\n\n    return 'main';\n  }; // auth for demo build, remove it in your app\n\n\n  const DEMO_AUTH = process.env.REACT_APP_AUTHENTICATED === 'true';\n  const Container = Layouts[getLayout()];\n  const isUserAuthorized = DEMO_AUTH || user.authorized;\n  const isUserLoading = user.loading;\n  const isAuthLayout = getLayout() === 'auth';\n\n  const BootstrappedLayout = () => {\n    // show loader when user in check authorization process, not authorized yet and not on login pages\n    if (isUserLoading && !isUserAuthorized && !isAuthLayout) {\n      return null;\n    } // redirect to login page if current is not login page and user not authorized\n\n\n    if (!isAuthLayout && !isUserAuthorized) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/auth/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 14\n        }\n      });\n    } // in other case render previously set layout\n\n\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }\n    }, children);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    titleTemplate: \"Clicks | %s\",\n    title: \"React Admin Template\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), BootstrappedLayout());\n};\n\nexport default withRouter(connect(mapStateToProps)(Layout));","map":{"version":3,"sources":["/Users/pradeepkumar/Downloads/clicks-backend-master/src/layouts/index.js"],"names":["React","Fragment","withRouter","Redirect","connect","NProgress","Helmet","PublicLayout","AuthLayout","MainLayout","Layouts","public","auth","main","mapStateToProps","user","previousPath","Layout","children","location","pathname","search","currentPath","window","scrollTo","start","setTimeout","done","getLayout","test","DEMO_AUTH","process","env","REACT_APP_AUTHENTICATED","Container","isUserAuthorized","authorized","isUserLoading","loading","isAuthLayout","BootstrappedLayout"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,kBAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,MAAT,QAAuB,cAAvB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,UAAzB;AACA,OAAOC,UAAP,MAAuB,QAAvB;AACA,OAAOC,UAAP,MAAuB,QAAvB;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAEJ,YADM;AAEdK,EAAAA,IAAI,EAAEJ,UAFQ;AAGdK,EAAAA,IAAI,EAAEJ;AAHQ,CAAhB;;AAMA,MAAMK,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAe;AAAEA,EAAAA;AAAF,CAAf,CAAxB;;AACA,IAAIC,YAAY,GAAG,EAAnB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEF,EAAAA,IAAF;AAAQG,EAAAA,QAAR;AAAkBC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ;AAA5B,CAAD,KAAwD;AACrE;AACA,QAAMC,WAAW,GAAGF,QAAQ,GAAGC,MAA/B;;AACA,MAAIC,WAAW,KAAKN,YAApB,EAAkC;AAChCO,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACAnB,IAAAA,SAAS,CAACoB,KAAV;AACD;;AACDC,EAAAA,UAAU,CAAC,MAAM;AACfrB,IAAAA,SAAS,CAACsB,IAAV;AACAX,IAAAA,YAAY,GAAGM,WAAf;AACD,GAHS,EAGP,GAHO,CAAV,CAPqE,CAYrE;;AACA,QAAMM,SAAS,GAAG,MAAM;AACtB,QAAIR,QAAQ,KAAK,GAAjB,EAAsB;AACpB,aAAO,QAAP;AACD;;AACD,QAAI,mBAAmBS,IAAnB,CAAwBT,QAAxB,CAAJ,EAAuC;AACrC,aAAO,MAAP;AACD;;AACD,WAAO,MAAP;AACD,GARD,CAbqE,CAuBrE;;;AACA,QAAMU,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAAZ,KAAwC,MAA1D;AAEA,QAAMC,SAAS,GAAGxB,OAAO,CAACkB,SAAS,EAAV,CAAzB;AACA,QAAMO,gBAAgB,GAAGL,SAAS,IAAIf,IAAI,CAACqB,UAA3C;AACA,QAAMC,aAAa,GAAGtB,IAAI,CAACuB,OAA3B;AACA,QAAMC,YAAY,GAAGX,SAAS,OAAO,MAArC;;AAEA,QAAMY,kBAAkB,GAAG,MAAM;AAC/B;AACA,QAAIH,aAAa,IAAI,CAACF,gBAAlB,IAAsC,CAACI,YAA3C,EAAyD;AACvD,aAAO,IAAP;AACD,KAJ8B,CAK/B;;;AACA,QAAI,CAACA,YAAD,IAAiB,CAACJ,gBAAtB,EAAwC;AACtC,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAR8B,CAS/B;;;AACA,wBAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYjB,QAAZ,CAAP;AACD,GAXD;;AAaA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,aAAa,EAAC,aAAtB;AAAoC,IAAA,KAAK,EAAC,sBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGsB,kBAAkB,EAFrB,CADF;AAMD,CAlDD;;AAoDA,eAAetC,UAAU,CAACE,OAAO,CAACU,eAAD,CAAP,CAAyBG,MAAzB,CAAD,CAAzB","sourcesContent":["import React, { Fragment } from 'react'\nimport { withRouter, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport NProgress from 'nprogress'\nimport { Helmet } from 'react-helmet'\n// import Loader from 'components/cleanui/layout/Loader'\nimport PublicLayout from './Public'\nimport AuthLayout from './Auth'\nimport MainLayout from './Main'\n\nconst Layouts = {\n  public: PublicLayout,\n  auth: AuthLayout,\n  main: MainLayout,\n}\n\nconst mapStateToProps = ({ user }) => ({ user })\nlet previousPath = ''\n\nconst Layout = ({ user, children, location: { pathname, search } }) => {\n  // NProgress & ScrollTop Management\n  const currentPath = pathname + search\n  if (currentPath !== previousPath) {\n    window.scrollTo(0, 0)\n    NProgress.start()\n  }\n  setTimeout(() => {\n    NProgress.done()\n    previousPath = currentPath\n  }, 300)\n\n  // Layout Rendering\n  const getLayout = () => {\n    if (pathname === '/') {\n      return 'public'\n    }\n    if (/^\\/auth(?=\\/|$)/i.test(pathname)) {\n      return 'auth'\n    }\n    return 'main'\n  }\n\n  // auth for demo build, remove it in your app\n  const DEMO_AUTH = process.env.REACT_APP_AUTHENTICATED === 'true'\n\n  const Container = Layouts[getLayout()]\n  const isUserAuthorized = DEMO_AUTH || user.authorized\n  const isUserLoading = user.loading\n  const isAuthLayout = getLayout() === 'auth'\n\n  const BootstrappedLayout = () => {\n    // show loader when user in check authorization process, not authorized yet and not on login pages\n    if (isUserLoading && !isUserAuthorized && !isAuthLayout) {\n      return null\n    }\n    // redirect to login page if current is not login page and user not authorized\n    if (!isAuthLayout && !isUserAuthorized) {\n      return <Redirect to=\"/auth/login\" />\n    }\n    // in other case render previously set layout\n    return <Container>{children}</Container>\n  }\n\n  return (\n    <Fragment>\n      <Helmet titleTemplate=\"Clicks | %s\" title=\"React Admin Template\" />\n      {BootstrappedLayout()}\n    </Fragment>\n  )\n}\n\nexport default withRouter(connect(mapStateToProps)(Layout))\n"]},"metadata":{},"sourceType":"module"}