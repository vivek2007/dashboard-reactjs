{"ast":null,"code":"var _jsxFileName = \"/Users/pradeepkumar/Downloads/clicks-backend-master/src/pages/ui-kits/bootstrap/examples/popovers/index.js\";\nimport React from 'react';\nimport { Button, Popover, PopoverHeader, PopoverBody, UncontrolledPopover } from 'reactstrap';\n\nclass BootstrapPopoversExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      popoverOpen: false\n    };\n  }\n\n  toggle() {\n    const {\n      popoverOpen\n    } = this.state;\n    this.setState({\n      popoverOpen: !popoverOpen\n    });\n  }\n\n  render() {\n    const {\n      popoverOpen\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, \"Default Popovers\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: \"Popover1\",\n      type: \"button\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, \"Launch Popover\"), /*#__PURE__*/React.createElement(Popover, {\n      placement: \"bottom\",\n      isOpen: popoverOpen,\n      target: \"Popover1\",\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(PopoverHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \"Popover Title\"), /*#__PURE__*/React.createElement(PopoverBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, \"Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.\"))), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \"Popovers Trigger\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: \"PopoverFocus\",\n      type: \"button\",\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"Launch Popover (Focus)\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      id: \"PopoverClick\",\n      type: \"button\",\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"Launch Popover (Click)\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      id: \"PopoverLegacy\",\n      type: \"button\",\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"Launch Popover (Legacy)\"), /*#__PURE__*/React.createElement(UncontrolledPopover, {\n      trigger: \"focus\",\n      placement: \"bottom\",\n      target: \"PopoverFocus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(PopoverHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"Focus Trigger\"), /*#__PURE__*/React.createElement(PopoverBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"Focusing on the trigging element makes this popover appear. Blurring (clicking away) makes it disappear. You cannot select this text as the popover will disappear when you try.\")), /*#__PURE__*/React.createElement(UncontrolledPopover, {\n      trigger: \"click\",\n      placement: \"bottom\",\n      target: \"PopoverClick\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(PopoverHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Click Trigger\"), /*#__PURE__*/React.createElement(PopoverBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"Clicking on the triggering element makes this popover appear. Clicking on it again will make it disappear. You can select this text, but clicking away (somewhere other than the triggering element) will not dismiss this popover.\")), /*#__PURE__*/React.createElement(UncontrolledPopover, {\n      trigger: \"legacy\",\n      placement: \"bottom\",\n      target: \"PopoverLegacy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(PopoverHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"Legacy Trigger\"), /*#__PURE__*/React.createElement(PopoverBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"Legacy is a reactstrap special trigger value (outside of bootstraps spec/standard). Before reactstrap correctly supported click and focus, it had a hybrid which was very useful and has been brought back as trigger=legacy. One advantage of the legacy trigger is that it allows the popover text to be selected while also closing when clicking outside the triggering element and popover itself.\"))));\n  }\n\n}\n\nexport default BootstrapPopoversExample;","map":{"version":3,"sources":["/Users/pradeepkumar/Downloads/clicks-backend-master/src/pages/ui-kits/bootstrap/examples/popovers/index.js"],"names":["React","Button","Popover","PopoverHeader","PopoverBody","UncontrolledPopover","BootstrapPopoversExample","Component","constructor","props","toggle","bind","state","popoverOpen","setState","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Popover, PopoverHeader, PopoverBody, UncontrolledPopover } from 'reactstrap'\n\nclass BootstrapPopoversExample extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      popoverOpen: false,\n    }\n  }\n\n  toggle() {\n    const { popoverOpen } = this.state\n    this.setState({\n      popoverOpen: !popoverOpen,\n    })\n  }\n\n  render() {\n    const { popoverOpen } = this.state\n\n    return (\n      <div>\n        <h5 className=\"mb-4\">\n          <strong>Default Popovers</strong>\n        </h5>\n        <div className=\"mb-5\">\n          <Button id=\"Popover1\" type=\"button\" color=\"primary\">\n            Launch Popover\n          </Button>\n          <Popover placement=\"bottom\" isOpen={popoverOpen} target=\"Popover1\" toggle={this.toggle}>\n            <PopoverHeader>Popover Title</PopoverHeader>\n            <PopoverBody>\n              Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem\n              lacinia quam venenatis vestibulum.\n            </PopoverBody>\n          </Popover>\n        </div>\n\n        <h5 className=\"mb-4\">\n          <strong>Popovers Trigger</strong>\n        </h5>\n\n        <div className=\"mb-5\">\n          <Button id=\"PopoverFocus\" type=\"button\" color=\"light\">\n            Launch Popover (Focus)\n          </Button>{' '}\n          <Button id=\"PopoverClick\" type=\"button\" color=\"light\">\n            Launch Popover (Click)\n          </Button>{' '}\n          <Button id=\"PopoverLegacy\" type=\"button\" color=\"light\">\n            Launch Popover (Legacy)\n          </Button>\n          <UncontrolledPopover trigger=\"focus\" placement=\"bottom\" target=\"PopoverFocus\">\n            <PopoverHeader>Focus Trigger</PopoverHeader>\n            <PopoverBody>\n              Focusing on the trigging element makes this popover appear. Blurring (clicking away)\n              makes it disappear. You cannot select this text as the popover will disappear when you\n              try.\n            </PopoverBody>\n          </UncontrolledPopover>\n          <UncontrolledPopover trigger=\"click\" placement=\"bottom\" target=\"PopoverClick\">\n            <PopoverHeader>Click Trigger</PopoverHeader>\n            <PopoverBody>\n              Clicking on the triggering element makes this popover appear. Clicking on it again\n              will make it disappear. You can select this text, but clicking away (somewhere other\n              than the triggering element) will not dismiss this popover.\n            </PopoverBody>\n          </UncontrolledPopover>\n          <UncontrolledPopover trigger=\"legacy\" placement=\"bottom\" target=\"PopoverLegacy\">\n            <PopoverHeader>Legacy Trigger</PopoverHeader>\n            <PopoverBody>\n              Legacy is a reactstrap special trigger value (outside of bootstraps spec/standard).\n              Before reactstrap correctly supported click and focus, it had a hybrid which was very\n              useful and has been brought back as trigger=legacy. One advantage of the legacy\n              trigger is that it allows the popover text to be selected while also closing when\n              clicking outside the triggering element and popover itself.\n            </PopoverBody>\n          </UncontrolledPopover>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default BootstrapPopoversExample\n"]},"metadata":{},"sourceType":"module"}