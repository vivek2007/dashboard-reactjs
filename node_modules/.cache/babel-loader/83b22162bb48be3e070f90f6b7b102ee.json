{"ast":null,"code":"var _jsxFileName = \"/Users/pradeepkumar/Downloads/clicks-backend-master/src/components/kit/widgets/Charts/10/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport data from './data.json';\nimport style from './style.module.scss';\n\nconst Chart10 = () => {\n  const tooltip = React.createRef();\n  const tooltipLabel = React.createRef();\n  const tooltipValue = React.createRef();\n  const [myRef, setMyRef] = useState(null);\n  const [legend, setLegend] = useState(undefined); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    const leg = generateLegend();\n    setLegend(leg);\n  });\n\n  const setChartRef = element => {\n    setMyRef(element);\n  };\n\n  const generateLegend = () => {\n    if (!myRef) return null;\n    return myRef.chartInstance.generateLegend();\n  };\n\n  const createMarkup = () => {\n    return {\n      __html: legend\n    };\n  };\n\n  const options = {\n    animation: false,\n    responsive: true,\n    cutoutPercentage: 70,\n    legend: {\n      display: false\n    },\n    tooltips: {\n      enabled: false,\n      custom: tooltipData => {\n        const tooltipEl = tooltip.current;\n        tooltipEl.style.opacity = 1;\n\n        if (tooltipData.opacity === 0) {\n          tooltipEl.style.opacity = 0;\n        }\n      },\n      callbacks: {\n        label: (tooltipItem, itemData) => {\n          const dataset = itemData.datasets[0];\n          const value = dataset.data[tooltipItem.index];\n          tooltipValue.current.innerHTML = value;\n          tooltipLabel.current.innerHTML = itemData.labels[tooltipItem.index];\n        }\n      }\n    },\n    legendCallback: chart => {\n      const {\n        labels\n      } = chart.data;\n      let legendMarkup = [];\n      const dataset = chart.data.datasets[0];\n      legendMarkup.push('<div class=\"kit__c9__chartLegend flex-shrink-0\">');\n      let legends = labels.map((label, index) => {\n        const color = dataset.backgroundColor[index];\n        return `<div class=\"d-flex align-items-center flex-nowrap mt-2 mb-2\"><div class=\"tablet mr-3\" style=\"background-color: ${color}\"></div>${label}</div>`;\n      });\n      legends = legends.join('');\n      legendMarkup.push(legends);\n      legendMarkup.push('</div>');\n      legendMarkup = legendMarkup.join('');\n      return legendMarkup;\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-dark font-size-18 font-weight-bold mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Profit Change\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-gray-6 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Revenue by location and date\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-wrap align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-3 mt-3 mb-3 position-relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Doughnut, {\n    ref: element => setChartRef(element),\n    data: data,\n    options: options,\n    width: 140,\n    height: 140,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${style.tooltip} text-gray-5 font-size-28 text-center`,\n    ref: tooltip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"font-size-14 font-weight-bold text-dark\",\n    ref: tooltipLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"font-size-14 text-dark\",\n    ref: tooltipValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    dangerouslySetInnerHTML: createMarkup(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Chart10;","map":{"version":3,"sources":["/Users/pradeepkumar/Downloads/clicks-backend-master/src/components/kit/widgets/Charts/10/index.js"],"names":["React","useState","useEffect","Doughnut","data","style","Chart10","tooltip","createRef","tooltipLabel","tooltipValue","myRef","setMyRef","legend","setLegend","undefined","leg","generateLegend","setChartRef","element","chartInstance","createMarkup","__html","options","animation","responsive","cutoutPercentage","display","tooltips","enabled","custom","tooltipData","tooltipEl","current","opacity","callbacks","label","tooltipItem","itemData","dataset","datasets","value","index","innerHTML","labels","legendCallback","chart","legendMarkup","push","legends","map","color","backgroundColor","join"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Doughnut } from 'react-chartjs-2'\n\nimport data from './data.json'\nimport style from './style.module.scss'\n\nconst Chart10 = () => {\n  const tooltip = React.createRef()\n  const tooltipLabel = React.createRef()\n  const tooltipValue = React.createRef()\n\n  const [myRef, setMyRef] = useState(null)\n  const [legend, setLegend] = useState(undefined)\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    const leg = generateLegend()\n    setLegend(leg)\n  })\n\n  const setChartRef = element => {\n    setMyRef(element)\n  }\n\n  const generateLegend = () => {\n    if (!myRef) return null\n    return myRef.chartInstance.generateLegend()\n  }\n\n  const createMarkup = () => {\n    return { __html: legend }\n  }\n\n  const options = {\n    animation: false,\n    responsive: true,\n    cutoutPercentage: 70,\n    legend: {\n      display: false,\n    },\n    tooltips: {\n      enabled: false,\n      custom: tooltipData => {\n        const tooltipEl = tooltip.current\n        tooltipEl.style.opacity = 1\n        if (tooltipData.opacity === 0) {\n          tooltipEl.style.opacity = 0\n        }\n      },\n      callbacks: {\n        label: (tooltipItem, itemData) => {\n          const dataset = itemData.datasets[0]\n          const value = dataset.data[tooltipItem.index]\n          tooltipValue.current.innerHTML = value\n          tooltipLabel.current.innerHTML = itemData.labels[tooltipItem.index]\n        },\n      },\n    },\n    legendCallback: chart => {\n      const { labels } = chart.data\n      let legendMarkup = []\n      const dataset = chart.data.datasets[0]\n      legendMarkup.push('<div class=\"kit__c9__chartLegend flex-shrink-0\">')\n      let legends = labels.map((label, index) => {\n        const color = dataset.backgroundColor[index]\n        return `<div class=\"d-flex align-items-center flex-nowrap mt-2 mb-2\"><div class=\"tablet mr-3\" style=\"background-color: ${color}\"></div>${label}</div>`\n      })\n      legends = legends.join('')\n      legendMarkup.push(legends)\n      legendMarkup.push('</div>')\n      legendMarkup = legendMarkup.join('')\n      return legendMarkup\n    },\n  }\n\n  return (\n    <div>\n      <div className=\"text-dark font-size-18 font-weight-bold mb-1\">Profit Change</div>\n      <div className=\"text-gray-6 mb-2\">Revenue by location and date</div>\n      <div className=\"d-flex flex-wrap align-items-center\">\n        <div className=\"mr-3 mt-3 mb-3 position-relative\">\n          <Doughnut\n            ref={element => setChartRef(element)}\n            data={data}\n            options={options}\n            width={140}\n            height={140}\n          />\n          <div className={`${style.tooltip} text-gray-5 font-size-28 text-center`} ref={tooltip}>\n            <div className=\"font-size-14 font-weight-bold text-dark\" ref={tooltipLabel} />\n            <div className=\"font-size-14 text-dark\" ref={tooltipValue} />\n          </div>\n        </div>\n        <div dangerouslySetInnerHTML={createMarkup()} />\n      </div>\n    </div>\n  )\n}\n\nexport default Chart10\n"]},"metadata":{},"sourceType":"module"}