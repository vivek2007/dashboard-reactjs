{"ast":null,"code":"import { tsvParse } from 'd3-dsv';\nimport { timeParse } from 'd3-time-format';\n\nfunction parseData(parse) {\n  return function cb(d) {\n    const b = {};\n    b.date = parse(d.date);\n    b.open = +d.open;\n    b.high = +d.high;\n    b.low = +d.low;\n    b.close = +d.close;\n    b.volume = +d.volume;\n    return b;\n  };\n}\n\nconst parseDate = timeParse('%Y-%m-%d');\nexport default function getData() {\n  const promiseMSFT = fetch('//rrag.github.io/react-stockcharts/data/MSFT.tsv').then(response => response.text()).then(data => tsvParse(data, parseData(parseDate)));\n  return promiseMSFT;\n}","map":{"version":3,"sources":["/Users/pradeepkumar/Downloads/clicks-backend-master/src/pages/dashboard/crypto/TradeChart/utils.js"],"names":["tsvParse","timeParse","parseData","parse","cb","d","b","date","open","high","low","close","volume","parseDate","getData","promiseMSFT","fetch","then","response","text","data"],"mappings":"AAAA,SAASA,QAAT,QAAyB,QAAzB;AACA,SAASC,SAAT,QAA0B,gBAA1B;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,SAAO,SAASC,EAAT,CAAYC,CAAZ,EAAe;AACpB,UAAMC,CAAC,GAAG,EAAV;AACAA,IAAAA,CAAC,CAACC,IAAF,GAASJ,KAAK,CAACE,CAAC,CAACE,IAAH,CAAd;AACAD,IAAAA,CAAC,CAACE,IAAF,GAAS,CAACH,CAAC,CAACG,IAAZ;AACAF,IAAAA,CAAC,CAACG,IAAF,GAAS,CAACJ,CAAC,CAACI,IAAZ;AACAH,IAAAA,CAAC,CAACI,GAAF,GAAQ,CAACL,CAAC,CAACK,GAAX;AACAJ,IAAAA,CAAC,CAACK,KAAF,GAAU,CAACN,CAAC,CAACM,KAAb;AACAL,IAAAA,CAAC,CAACM,MAAF,GAAW,CAACP,CAAC,CAACO,MAAd;AACA,WAAON,CAAP;AACD,GATD;AAUD;;AAED,MAAMO,SAAS,GAAGZ,SAAS,CAAC,UAAD,CAA3B;AAEA,eAAe,SAASa,OAAT,GAAmB;AAChC,QAAMC,WAAW,GAAGC,KAAK,CAAC,kDAAD,CAAL,CACjBC,IADiB,CACZC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADA,EAEjBF,IAFiB,CAEZG,IAAI,IAAIpB,QAAQ,CAACoB,IAAD,EAAOlB,SAAS,CAACW,SAAD,CAAhB,CAFJ,CAApB;AAGA,SAAOE,WAAP;AACD","sourcesContent":["import { tsvParse } from 'd3-dsv'\nimport { timeParse } from 'd3-time-format'\n\nfunction parseData(parse) {\n  return function cb(d) {\n    const b = {}\n    b.date = parse(d.date)\n    b.open = +d.open\n    b.high = +d.high\n    b.low = +d.low\n    b.close = +d.close\n    b.volume = +d.volume\n    return b\n  }\n}\n\nconst parseDate = timeParse('%Y-%m-%d')\n\nexport default function getData() {\n  const promiseMSFT = fetch('//rrag.github.io/react-stockcharts/data/MSFT.tsv')\n    .then(response => response.text())\n    .then(data => tsvParse(data, parseData(parseDate)))\n  return promiseMSFT\n}\n"]},"metadata":{},"sourceType":"module"}