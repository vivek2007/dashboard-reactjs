{"ast":null,"code":"import firebase from 'firebase/app';\nimport { notification } from 'antd';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAE5G0RI2LwzwTBizhJbnRKIKbiXQIA1dY',\n  authDomain: 'cleanui-72a42.firebaseapp.com',\n  databaseURL: 'https://cleanui-72a42.firebaseio.com',\n  projectId: 'cleanui-72a42',\n  storageBucket: 'cleanui-72a42.appspot.com',\n  messagingSenderId: '583382839121'\n};\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst firebaseAuth = firebase.auth;\nexport default firebaseApp;\nexport async function login(email, password) {\n  return firebaseAuth().signInWithEmailAndPassword(email, password).then(() => true).catch(error => {\n    notification.warning({\n      message: error.code,\n      description: error.message\n    });\n  });\n}\nexport async function currentAccount() {\n  let userLoaded = false;\n\n  function getCurrentUser(auth) {\n    return new Promise((resolve, reject) => {\n      if (userLoaded) {\n        resolve(firebaseAuth.currentUser);\n      }\n\n      const unsubscribe = auth.onAuthStateChanged(user => {\n        userLoaded = true;\n        unsubscribe();\n        resolve(user);\n      }, reject);\n    });\n  }\n\n  return getCurrentUser(firebaseAuth());\n}\nexport async function logout() {\n  return firebaseAuth().signOut().then(() => true);\n}","map":{"version":3,"sources":["/Users/pradeepkumar/Downloads/clicks-backend-master/src/services/firebase.auth.service.js"],"names":["firebase","notification","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebaseApp","initializeApp","firebaseAuth","auth","login","email","password","signInWithEmailAndPassword","then","catch","error","warning","message","code","description","currentAccount","userLoaded","getCurrentUser","Promise","resolve","reject","currentUser","unsubscribe","onAuthStateChanged","user","logout","signOut"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,SAASC,YAAT,QAA6B,MAA7B;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;AACA,OAAO,kBAAP;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,+BAFS;AAGrBC,EAAAA,WAAW,EAAE,sCAHQ;AAIrBC,EAAAA,SAAS,EAAE,eAJU;AAKrBC,EAAAA,aAAa,EAAE,2BALM;AAMrBC,EAAAA,iBAAiB,EAAE;AANE,CAAvB;AASA,MAAMC,WAAW,GAAGT,QAAQ,CAACU,aAAT,CAAuBR,cAAvB,CAApB;AACA,MAAMS,YAAY,GAAGX,QAAQ,CAACY,IAA9B;AACA,eAAeH,WAAf;AAEA,OAAO,eAAeI,KAAf,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;AAC3C,SAAOJ,YAAY,GAChBK,0BADI,CACuBF,KADvB,EAC8BC,QAD9B,EAEJE,IAFI,CAEC,MAAM,IAFP,EAGJC,KAHI,CAGEC,KAAK,IAAI;AACdlB,IAAAA,YAAY,CAACmB,OAAb,CAAqB;AACnBC,MAAAA,OAAO,EAAEF,KAAK,CAACG,IADI;AAEnBC,MAAAA,WAAW,EAAEJ,KAAK,CAACE;AAFA,KAArB;AAID,GARI,CAAP;AASD;AAED,OAAO,eAAeG,cAAf,GAAgC;AACrC,MAAIC,UAAU,GAAG,KAAjB;;AACA,WAASC,cAAT,CAAwBd,IAAxB,EAA8B;AAC5B,WAAO,IAAIe,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAIJ,UAAJ,EAAgB;AACdG,QAAAA,OAAO,CAACjB,YAAY,CAACmB,WAAd,CAAP;AACD;;AACD,YAAMC,WAAW,GAAGnB,IAAI,CAACoB,kBAAL,CAAwBC,IAAI,IAAI;AAClDR,QAAAA,UAAU,GAAG,IAAb;AACAM,QAAAA,WAAW;AACXH,QAAAA,OAAO,CAACK,IAAD,CAAP;AACD,OAJmB,EAIjBJ,MAJiB,CAApB;AAKD,KATM,CAAP;AAUD;;AACD,SAAOH,cAAc,CAACf,YAAY,EAAb,CAArB;AACD;AAED,OAAO,eAAeuB,MAAf,GAAwB;AAC7B,SAAOvB,YAAY,GAChBwB,OADI,GAEJlB,IAFI,CAEC,MAAM,IAFP,CAAP;AAGD","sourcesContent":["import firebase from 'firebase/app'\nimport { notification } from 'antd'\nimport 'firebase/auth'\nimport 'firebase/database'\nimport 'firebase/storage'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAE5G0RI2LwzwTBizhJbnRKIKbiXQIA1dY',\n  authDomain: 'cleanui-72a42.firebaseapp.com',\n  databaseURL: 'https://cleanui-72a42.firebaseio.com',\n  projectId: 'cleanui-72a42',\n  storageBucket: 'cleanui-72a42.appspot.com',\n  messagingSenderId: '583382839121',\n}\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\nconst firebaseAuth = firebase.auth\nexport default firebaseApp\n\nexport async function login(email, password) {\n  return firebaseAuth()\n    .signInWithEmailAndPassword(email, password)\n    .then(() => true)\n    .catch(error => {\n      notification.warning({\n        message: error.code,\n        description: error.message,\n      })\n    })\n}\n\nexport async function currentAccount() {\n  let userLoaded = false\n  function getCurrentUser(auth) {\n    return new Promise((resolve, reject) => {\n      if (userLoaded) {\n        resolve(firebaseAuth.currentUser)\n      }\n      const unsubscribe = auth.onAuthStateChanged(user => {\n        userLoaded = true\n        unsubscribe()\n        resolve(user)\n      }, reject)\n    })\n  }\n  return getCurrentUser(firebaseAuth())\n}\n\nexport async function logout() {\n  return firebaseAuth()\n    .signOut()\n    .then(() => true)\n}\n"]},"metadata":{},"sourceType":"module"}