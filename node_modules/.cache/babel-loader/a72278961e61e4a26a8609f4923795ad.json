{"ast":null,"code":"/* eslint-disable */\nconst GetPostProcessor = function () {\n  function Processor(themeName) {\n    this.options = {\n      wrappers: [`[data-kit-theme=\"${themeName}\"]`]\n    } || {};\n  }\n\n  Processor.prototype = {\n    process: function (css) {\n      // Check if css is wrapped with any one of the marks\n      const antDesignTemplateMark = this.options.wrappers.reduce((mark, wrapper) => css.indexOf(wrapper) >= 0 ? wrapper : mark, '');\n\n      if (!antDesignTemplateMark) {\n        return css;\n      } // Escape the mark to be RegExp friendly\n\n\n      const escapedMark = antDesignTemplateMark.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // Split, map, remove all, add one, clean double spaces\n\n      const lines = css.split('\\n').map(line => {\n        if (line.indexOf(antDesignTemplateMark) === -1) {\n          return line;\n        }\n\n        const finder = new RegExp(escapedMark, 'g');\n        const finderNested = new RegExp(`(?<!^(?<!s))${escapedMark} `, 'g');\n        const replaceNestedLine = line.replace(finderNested, '');\n        const replaceLine = `${antDesignTemplateMark} ${replaceNestedLine.replace(finder, '')}`;\n        return replaceLine.replace(/( {2})/g, ' ');\n      });\n      return lines.join('\\n');\n    }\n  };\n  return Processor;\n};\n\nmodule.exports = {\n  install: function (less, pluginManager, functions) {\n    const PostProcessor = GetPostProcessor(less);\n    functions.add('apply', function (theme) {\n      pluginManager.addPostProcessor(new PostProcessor(theme.value));\n      return false;\n    });\n  }\n};","map":{"version":3,"sources":["/Users/pradeepkumar/Downloads/clicks-backend-master/src/components/kit/vendors/antd/themes/AntdThemeLoader.js"],"names":["GetPostProcessor","Processor","themeName","options","wrappers","prototype","process","css","antDesignTemplateMark","reduce","mark","wrapper","indexOf","escapedMark","replace","lines","split","map","line","finder","RegExp","finderNested","replaceNestedLine","replaceLine","join","module","exports","install","less","pluginManager","functions","PostProcessor","add","theme","addPostProcessor","value"],"mappings":"AAAA;AACA,MAAMA,gBAAgB,GAAG,YAAY;AACnC,WAASC,SAAT,CAAmBC,SAAnB,EAA8B;AAC5B,SAAKC,OAAL,GAAe;AAAEC,MAAAA,QAAQ,EAAE,CAAE,oBAAmBF,SAAU,IAA/B;AAAZ,SAAqD,EAApE;AACD;;AAEDD,EAAAA,SAAS,CAACI,SAAV,GAAsB;AACpBC,IAAAA,OAAO,EAAE,UAAUC,GAAV,EAAe;AACtB;AACA,YAAMC,qBAAqB,GAAG,KAAKL,OAAL,CAAaC,QAAb,CAAsBK,MAAtB,CAA6B,CAACC,IAAD,EAAOC,OAAP,KAAoBJ,GAAG,CAACK,OAAJ,CAAYD,OAAZ,KAAwB,CAAxB,GAA4BA,OAA5B,GAAsCD,IAAvF,EAA8F,EAA9F,CAA9B;;AAEA,UAAI,CAACF,qBAAL,EAA4B;AAC1B,eAAOD,GAAP;AACD,OANqB,CAQtB;;;AACA,YAAMM,WAAW,GAAGL,qBAAqB,CAACM,OAAtB,CAA8B,qBAA9B,EAAqD,MAArD,CAApB,CATsB,CAUtB;;AACA,YAAMC,KAAK,GAAGR,GAAG,CAACS,KAAJ,CAAU,IAAV,EAAgBC,GAAhB,CAAqBC,IAAD,IAAU;AAC1C,YAAIA,IAAI,CAACN,OAAL,CAAaJ,qBAAb,MAAwC,CAAC,CAA7C,EAAgD;AAC9C,iBAAOU,IAAP;AACD;;AAED,cAAMC,MAAM,GAAG,IAAIC,MAAJ,CAAWP,WAAX,EAAwB,GAAxB,CAAf;AACA,cAAMQ,YAAY,GAAG,IAAID,MAAJ,CAAY,eAAcP,WAAY,GAAtC,EAA0C,GAA1C,CAArB;AACA,cAAMS,iBAAiB,GAAGJ,IAAI,CAACJ,OAAL,CAAaO,YAAb,EAA2B,EAA3B,CAA1B;AACA,cAAME,WAAW,GAAI,GAAEf,qBAAsB,IAAGc,iBAAiB,CAACR,OAAlB,CAA0BK,MAA1B,EAAkC,EAAlC,CAAsC,EAAtF;AACA,eAAOI,WAAW,CAACT,OAAZ,CAAoB,SAApB,EAA+B,GAA/B,CAAP;AACD,OAVa,CAAd;AAYA,aAAOC,KAAK,CAACS,IAAN,CAAW,IAAX,CAAP;AACD;AAzBmB,GAAtB;AA4BA,SAAOvB,SAAP;AACD,CAlCD;;AAoCAwB,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,OAAO,EAAE,UAAUC,IAAV,EAAgBC,aAAhB,EAA+BC,SAA/B,EAA0C;AACjD,UAAMC,aAAa,GAAG/B,gBAAgB,CAAC4B,IAAD,CAAtC;AACAE,IAAAA,SAAS,CAACE,GAAV,CAAc,OAAd,EAAuB,UAAUC,KAAV,EAAiB;AACtCJ,MAAAA,aAAa,CAACK,gBAAd,CAA+B,IAAIH,aAAJ,CAAkBE,KAAK,CAACE,KAAxB,CAA/B;AACA,aAAO,KAAP;AACD,KAHD;AAID;AAPc,CAAjB","sourcesContent":["/* eslint-disable */\nconst GetPostProcessor = function () {\n  function Processor(themeName) {\n    this.options = { wrappers: [`[data-kit-theme=\"${themeName}\"]`] } || {}\n  }\n\n  Processor.prototype = {\n    process: function (css) {\n      // Check if css is wrapped with any one of the marks\n      const antDesignTemplateMark = this.options.wrappers.reduce((mark, wrapper) => (css.indexOf(wrapper) >= 0 ? wrapper : mark), '')\n\n      if (!antDesignTemplateMark) {\n        return css\n      }\n\n      // Escape the mark to be RegExp friendly\n      const escapedMark = antDesignTemplateMark.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n      // Split, map, remove all, add one, clean double spaces\n      const lines = css.split('\\n').map((line) => {\n        if (line.indexOf(antDesignTemplateMark) === -1) {\n          return line\n        }\n\n        const finder = new RegExp(escapedMark, 'g')\n        const finderNested = new RegExp(`(?<!^(?<!s))${escapedMark} `, 'g')\n        const replaceNestedLine = line.replace(finderNested, '')\n        const replaceLine = `${antDesignTemplateMark} ${replaceNestedLine.replace(finder, '')}`\n        return replaceLine.replace(/( {2})/g, ' ')\n      })\n\n      return lines.join('\\n')\n    }\n  }\n\n  return Processor;\n}\n\nmodule.exports = {\n  install: function (less, pluginManager, functions) {\n    const PostProcessor = GetPostProcessor(less)\n    functions.add('apply', function (theme) {\n      pluginManager.addPostProcessor(new PostProcessor(theme.value))\n      return false;\n    });\n  },\n}\n"]},"metadata":{},"sourceType":"module"}