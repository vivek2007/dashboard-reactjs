{"ast":null,"code":"var _jsxFileName = \"/Users/pradeepkumar/Downloads/clicks-backend-master/src/components/cleanui/layout/Menu/index.js\";\nimport React, { useEffect } from 'react';\nimport { Drawer } from 'antd';\nimport { connect } from 'react-redux';\nimport MenuLeft from './MenuLeft';\nimport MenuTop from './MenuTop';\nimport style from './style.module.scss';\n\nconst mapStateToProps = ({\n  settings\n}) => ({\n  menuLayoutType: settings.menuLayoutType,\n  isMobileMenuOpen: settings.isMobileMenuOpen,\n  isMobileView: settings.isMobileView,\n  leftMenuWidth: settings.leftMenuWidth\n});\n\nlet touchStartPrev = 0;\nlet touchStartLocked = false;\n\nconst Menu = ({\n  dispatch,\n  isMobileMenuOpen,\n  isMobileView,\n  menuLayoutType,\n  leftMenuWidth\n}) => {\n  useEffect(() => {\n    // mobile menu touch slide opener\n    const unify = e => {\n      return e.changedTouches ? e.changedTouches[0] : e;\n    };\n\n    document.addEventListener('touchstart', e => {\n      const x = unify(e).clientX;\n      touchStartPrev = x;\n      touchStartLocked = x > 70;\n    }, {\n      passive: false\n    });\n    document.addEventListener('touchmove', e => {\n      const x = unify(e).clientX;\n      const prev = touchStartPrev;\n\n      if (x - prev > 50 && !touchStartLocked) {\n        toggleMobileMenu();\n        touchStartLocked = true;\n      }\n    }, {\n      passive: false\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const toggleMobileMenu = () => {\n    dispatch({\n      type: 'settings/CHANGE_SETTING',\n      payload: {\n        setting: 'isMobileMenuOpen',\n        value: !isMobileMenuOpen\n      }\n    });\n  };\n\n  const GetMenu = () => {\n    if (isMobileView) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: style.handler,\n        onClick: toggleMobileMenu,\n        onFocus: e => {\n          e.preventDefault();\n        },\n        onKeyPress: toggleMobileMenu,\n        role: \"button\",\n        tabIndex: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: style.handlerIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Drawer, {\n        closable: false,\n        visible: isMobileMenuOpen,\n        placement: \"left\",\n        className: style.mobileMenu,\n        onClose: toggleMobileMenu,\n        maskClosable: true,\n        getContainer: null,\n        width: leftMenuWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MenuLeft, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      })));\n    }\n\n    if (menuLayoutType === 'top') {\n      return /*#__PURE__*/React.createElement(MenuTop, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (menuLayoutType === 'nomenu') {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(MenuLeft, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 12\n      }\n    });\n  };\n\n  return GetMenu();\n};\n\nexport default connect(mapStateToProps)(Menu);","map":{"version":3,"sources":["/Users/pradeepkumar/Downloads/clicks-backend-master/src/components/cleanui/layout/Menu/index.js"],"names":["React","useEffect","Drawer","connect","MenuLeft","MenuTop","style","mapStateToProps","settings","menuLayoutType","isMobileMenuOpen","isMobileView","leftMenuWidth","touchStartPrev","touchStartLocked","Menu","dispatch","unify","e","changedTouches","document","addEventListener","x","clientX","passive","prev","toggleMobileMenu","type","payload","setting","value","GetMenu","handler","preventDefault","handlerIcon","mobileMenu"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Drawer } from 'antd'\nimport { connect } from 'react-redux'\nimport MenuLeft from './MenuLeft'\nimport MenuTop from './MenuTop'\nimport style from './style.module.scss'\n\nconst mapStateToProps = ({ settings }) => ({\n  menuLayoutType: settings.menuLayoutType,\n  isMobileMenuOpen: settings.isMobileMenuOpen,\n  isMobileView: settings.isMobileView,\n  leftMenuWidth: settings.leftMenuWidth,\n})\n\nlet touchStartPrev = 0\nlet touchStartLocked = false\n\nconst Menu = ({ dispatch, isMobileMenuOpen, isMobileView, menuLayoutType, leftMenuWidth }) => {\n  useEffect(() => {\n    // mobile menu touch slide opener\n    const unify = e => {\n      return e.changedTouches ? e.changedTouches[0] : e\n    }\n    document.addEventListener(\n      'touchstart',\n      e => {\n        const x = unify(e).clientX\n        touchStartPrev = x\n        touchStartLocked = x > 70\n      },\n      { passive: false },\n    )\n    document.addEventListener(\n      'touchmove',\n      e => {\n        const x = unify(e).clientX\n        const prev = touchStartPrev\n        if (x - prev > 50 && !touchStartLocked) {\n          toggleMobileMenu()\n          touchStartLocked = true\n        }\n      },\n      { passive: false },\n    )\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const toggleMobileMenu = () => {\n    dispatch({\n      type: 'settings/CHANGE_SETTING',\n      payload: {\n        setting: 'isMobileMenuOpen',\n        value: !isMobileMenuOpen,\n      },\n    })\n  }\n\n  const GetMenu = () => {\n    if (isMobileView) {\n      return (\n        <div>\n          <div\n            className={style.handler}\n            onClick={toggleMobileMenu}\n            onFocus={e => {\n              e.preventDefault()\n            }}\n            onKeyPress={toggleMobileMenu}\n            role=\"button\"\n            tabIndex=\"0\"\n          >\n            <div className={style.handlerIcon} />\n          </div>\n          <Drawer\n            closable={false}\n            visible={isMobileMenuOpen}\n            placement=\"left\"\n            className={style.mobileMenu}\n            onClose={toggleMobileMenu}\n            maskClosable\n            getContainer={null}\n            width={leftMenuWidth}\n          >\n            <MenuLeft />\n          </Drawer>\n        </div>\n      )\n    }\n    if (menuLayoutType === 'top') {\n      return <MenuTop />\n    }\n    if (menuLayoutType === 'nomenu') {\n      return null\n    }\n    return <MenuLeft />\n  }\n\n  return GetMenu()\n}\n\nexport default connect(mapStateToProps)(Menu)\n"]},"metadata":{},"sourceType":"module"}