{"ast":null,"code":"var _jsxFileName = \"/Users/pradeepkumar/Downloads/clicks-backend-master/src/pages/tables/antd/examples/custom-filter/index.js\";\nimport React from 'react';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Table, Input, Button } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport data from './data.json';\n\nclass TablesAntdCustomFilter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: ''\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          padding: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        ref: node => {\n          this.searchInput = node;\n        },\n        placeholder: `Search ${dataIndex}`,\n        value: selectedKeys[0],\n        onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n        onPressEnter: () => this.handleSearch(selectedKeys, confirm),\n        style: {\n          width: 188,\n          marginBottom: 8,\n          display: 'block'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        onClick: () => this.handleSearch(selectedKeys, confirm),\n        icon: /*#__PURE__*/React.createElement(SearchOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }\n        }),\n        size: \"small\",\n        style: {\n          width: 90,\n          marginRight: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.handleReset(clearFilters),\n        size: \"small\",\n        style: {\n          width: 90\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, \"Reset\")),\n      filterIcon: filtered => /*#__PURE__*/React.createElement(SearchOutlined, {\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }\n      }),\n      onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select());\n        }\n      },\n      render: text => {\n        const {\n          searchText\n        } = this.state;\n        return /*#__PURE__*/React.createElement(Highlighter, {\n          highlightStyle: {\n            backgroundColor: '#ffc069',\n            padding: 0\n          },\n          searchWords: [searchText],\n          autoEscape: true,\n          textToHighlight: text.toString(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }\n        });\n      }\n    });\n\n    this.handleSearch = (selectedKeys, confirm) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0]\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n  }\n\n  render() {\n    const columns = [{\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      width: '30%',\n      ...this.getColumnSearchProps('name')\n    }, {\n      title: 'Age',\n      dataIndex: 'age',\n      key: 'age',\n      width: '20%',\n      ...this.getColumnSearchProps('age')\n    }, {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n      ...this.getColumnSearchProps('address')\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-4 kit__utils__table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      columns: columns,\n      dataSource: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default TablesAntdCustomFilter;","map":{"version":3,"sources":["/Users/pradeepkumar/Downloads/clicks-backend-master/src/pages/tables/antd/examples/custom-filter/index.js"],"names":["React","SearchOutlined","Table","Input","Button","Highlighter","data","TablesAntdCustomFilter","Component","state","searchText","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","backgroundColor","setState","columns","title","key"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { SearchOutlined } from '@ant-design/icons'\nimport { Table, Input, Button } from 'antd'\nimport Highlighter from 'react-highlight-words'\nimport data from './data.json'\n\nclass TablesAntdCustomFilter extends React.Component {\n  state = {\n    searchText: '',\n  }\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm)}\n          icon={<SearchOutlined />}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Search\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>\n      record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select())\n      }\n    },\n    render: text => {\n      const { searchText } = this.state\n      return (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      )\n    },\n  })\n\n  handleSearch = (selectedKeys, confirm) => {\n    confirm()\n    this.setState({ searchText: selectedKeys[0] })\n  }\n\n  handleReset = clearFilters => {\n    clearFilters()\n    this.setState({ searchText: '' })\n  }\n\n  render() {\n    const columns = [\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        width: '30%',\n        ...this.getColumnSearchProps('name'),\n      },\n      {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n        width: '20%',\n        ...this.getColumnSearchProps('age'),\n      },\n      {\n        title: 'Address',\n        dataIndex: 'address',\n        key: 'address',\n        ...this.getColumnSearchProps('address'),\n      },\n    ]\n\n    return (\n      <div className=\"mb-4 kit__utils__table\">\n        <Table columns={columns} dataSource={data} />\n      </div>\n    )\n  }\n}\n\nexport default TablesAntdCustomFilter\n"]},"metadata":{},"sourceType":"module"}